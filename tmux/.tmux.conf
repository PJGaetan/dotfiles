unbind-key C-b
set -g prefix2 C-q; bind-key C-q send-prefix -2

bind r source-file ~/.tmux.conf
setw -g mode-keys vi

set -g mouse on

bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# Undercurl
set -g default-terminal "${TERM}"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0

# Vim like split windows
#bind v split-window -h
#bind n split-window -v

# added for relative number hybride in vim
set-option -g focus-events on

# Note with obsidian
# bind C-d display-popup -E nvim -c "ObsidianToday"
# bind C-w display-popup -h '80%' -w '80%' -E nvim -c "ObsidianWeekly"

bind C-g display-popup -E -h '100%' -w '100%' -d "#{pane_current_path}" -b none lazygit
# bind C-m display-popup -E -h '100%' -w '100%' -d "#{pane_current_path}" -b none spt

# Need to be inline or does not work
FZF_DEFAULT_OPTS="--height=70% --preview='([[ -f {} ]] && (bat --style=numbers --theme=Dracula --color=always {} || cat {})) || ([[ -d {} ]] && (tree -C {} | less)) || echo {} 2> /dev/null | head -200' --preview-window=right:60%:wrap:hidden --reverse --info=hidden --separator='' --scrollbar='' --bind '?:toggle-preview' --bind 'ctrl-a:select-all' --bind 'ctrl-y:execute-silent(echo {+} | pbcopy)' --bind 'ctrl-e:execute(echo {+} | xargs -o vim)' --bind 'ctrl-v:execute(code {+})' --color=fg:#f8f8f2,hl:#bd93f9 --color=fg+:#f8f8f2,hl+:#bd93f9 --color=info:#ffb86c,prompt:#50fa7b,pointer:#ff79c6 --color=marker:#ff79c6,spinner:#ffb86c,header:#6272a4"

# Session manager
bind C-k display-popup -E "\
    tmux list-sessions -F '#{t/f/%Y-%m-%d#:%H#:%M#:%S:session_last_attached},#{?session_attached,,#{session_name}}' | sort -r | cut -d ',' -f 2 |\
    sed '/^$/d' |\
    fzf --reverse -m ${FZF_DEFAULT_OPTS} --header=kill-session  |\
    xargs -I {} tmux kill-session -t {}"
bind C-h display-popup -E "\
    tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\
    tmux list-sessions -F '#{t/f/%Y-%m-%d#:%H#:%M#:%S:session_last_attached},#{?session_attached,,#{session_name}}' | sort -r | cut -d ',' -f 2 |\
    sed '/^$/d' |\
    fzf --reverse -m --header=switch-session ${FZF_DEFAULT_OPTS} --preview 'tmux capture-pane -pt {}' |\
    xargs -I % tmux switch-client -t %"

bind C-j display-popup -E "\
    ls ~/git |\
    fzf --reverse ${FZF_DEFAULT_OPTS} --header projects |\
    xargs -I % tmux new-session -d -P -F '#{?session_attached,,#{session_name}}' -s % -c ~/git/% |\
    xargs -I % tmux switch-client -t %"

# Notes
bind C-u run-shell -b "tmux new-session -d -s notes nvim &>/dev/null &&\
    tmux send-keys -t notes ':lua require(\"org-roam\").api.find_node({})' Enter && tmux switch-client -t notes ||\
    tmux send-keys -t notes ':lua require(\"org-roam\").api.find_node({})' Enter && tmux switch-client -t notes"

# lua require("org-roam").api.find_node
# Dotfiles
bind C-o run-shell -b "tmux new-session -c ~/dotfiles -d -s dotfiles nvim &>/dev/null &&\
    tmux send-keys -t dotfiles ':lua require(\"telescope.builtin\").find_files({ hidden = true, cwd = \"~/dotfiles\" })' Enter && tmux switch-client -t dotfiles ||\
    tmux send-keys -t dotfiles ':lua require(\"telescope.builtin\").find_files({ hidden = true, cwd = \"~/dotfiles\" })' Enter && tmux switch-client -t dotfiles"

# Copy mode like vim
bind P paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

set-option -g status-position top

# tpm plugin
set -g @plugin 'tmux-plugins/tpm'

set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-sessionist'

# Dracula theme status line
set -g @plugin 'dracula/tmux'
set -g @dracula-left-icon-padding 1

set -g @dracula-plugins "battery git time"
set -g @dracula-show-powerline false
set -g @dracula-show-flags false

# time
set -g @dracula-show-location false
set -g @dracula-day-month true
set -g @dracula-military-time true
set -g @dracula-show-timezone false

# git 
set -g @dracula-git-no-untracked-files true
set -g @dracula-git-show-current-symbol âœ“
set -g @dracula-git-show-diff-symbol !

set -g @dracula-show-left-icon session
set -g @dracula-show-empty-plugins false

# restore tmux sessions
set -g @plugin 'tmux-plugins/tmux-resurrect'
# for neovim
set -g @resurrect-strategy-nvim 'session'

# vim-tmux
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n C-j if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n C-k if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n C-l if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

bind-key -n M-h if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 3'
bind-key -n M-j if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 3'
bind-key -n M-k if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 3'
bind-key -n M-l if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 3'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# usefull for img shown in nvim
set -gq allow-passthrough on
set -g visual-activity off
set-option -g focus-events on


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
